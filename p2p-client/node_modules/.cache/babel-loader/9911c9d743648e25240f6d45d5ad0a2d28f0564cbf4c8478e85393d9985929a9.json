{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11427\\\\Desktop\\\\P2P\\\\p2p-client\\\\src\\\\components\\\\MessagePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport SignalRService from '../services/SignalRService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePanel = ({\n  userId,\n  deviceId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const messageAreaRef = useRef(null);\n  useEffect(() => {\n    // Register event handler for receiving messages\n    SignalRService.on('onReceiveMessage', handleReceiveMessage);\n    return () => {\n      // Clean up the event handler\n      SignalRService.on('onReceiveMessage', null);\n    };\n  }, []);\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    if (messageAreaRef.current) {\n      messageAreaRef.current.scrollTop = messageAreaRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleReceiveMessage = message => {\n    // 检查消息是否已经存在（防止重复）\n    setMessages(prevMessages => {\n      // 使用内容和时间戳作为检查重复的条件\n      const isDuplicate = prevMessages.some(m => m.content === message.content && Math.abs(new Date(m.timestamp) - new Date(message.timestamp)) < 1000);\n      if (isDuplicate) {\n        console.log('Duplicate message detected, not adding to UI', message);\n        return prevMessages;\n      }\n      return [...prevMessages, {\n        ...message,\n        isReceived: true\n      }];\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    try {\n      await SignalRService.sendMessage(userId, deviceId, message);\n\n      // Add the sent message to the messages list\n      setMessages(prevMessages => [...prevMessages, {\n        content: message,\n        senderDeviceId: deviceId,\n        timestamp: new Date(),\n        isReceived: false\n      }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messageAreaRef,\n      className: \"border rounded p-3 mb-3\",\n      style: {\n        height: '300px',\n        overflowY: 'auto'\n      },\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted text-center my-5\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 p-2 rounded ${msg.isReceived ? 'bg-light' : 'bg-primary text-white'}`,\n        style: {\n          maxWidth: '80%',\n          marginLeft: msg.isReceived ? '0' : 'auto',\n          marginRight: msg.isReceived ? 'auto' : '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-end small mt-1\",\n          children: formatTimestamp(msg.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSendMessage,\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagePanel, \"e++V3njbofK8W+jF64LJmMVwdiA=\");\n_c = MessagePanel;\nexport default MessagePanel;\nvar _c;\n$RefreshReg$(_c, \"MessagePanel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","SignalRService","jsxDEV","_jsxDEV","MessagePanel","userId","deviceId","_s","message","setMessage","messages","setMessages","messageAreaRef","on","handleReceiveMessage","current","scrollTop","scrollHeight","prevMessages","isDuplicate","some","m","content","Math","abs","Date","timestamp","console","log","isReceived","handleSendMessage","e","preventDefault","trim","sendMessage","senderDeviceId","error","formatTimestamp","date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","height","overflowY","length","map","msg","index","maxWidth","marginLeft","marginRight","onSubmit","Control","value","onChange","target","placeholder","type","variant","_c","$RefreshReg$"],"sources":["C:/Users/11427/Desktop/P2P/p2p-client/src/components/MessagePanel.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Form, InputGroup, Button } from 'react-bootstrap';\r\nimport SignalRService from '../services/SignalRService';\r\n\r\nconst MessagePanel = ({ userId, deviceId }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const messageAreaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Register event handler for receiving messages\r\n    SignalRService.on('onReceiveMessage', handleReceiveMessage);\r\n\r\n    return () => {\r\n      // Clean up the event handler\r\n      SignalRService.on('onReceiveMessage', null);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom when messages change\r\n    if (messageAreaRef.current) {\r\n      messageAreaRef.current.scrollTop = messageAreaRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleReceiveMessage = (message) => {\r\n    // 检查消息是否已经存在（防止重复）\r\n    setMessages(prevMessages => {\r\n      // 使用内容和时间戳作为检查重复的条件\r\n      const isDuplicate = prevMessages.some(\r\n        m => m.content === message.content && \r\n             Math.abs(new Date(m.timestamp) - new Date(message.timestamp)) < 1000\r\n      );\r\n      \r\n      if (isDuplicate) {\r\n        console.log('Duplicate message detected, not adding to UI', message);\r\n        return prevMessages;\r\n      }\r\n      \r\n      return [...prevMessages, {\r\n        ...message,\r\n        isReceived: true\r\n      }];\r\n    });\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!message.trim()) return;\r\n\r\n    try {\r\n      await SignalRService.sendMessage(userId, deviceId, message);\r\n      \r\n      // Add the sent message to the messages list\r\n      setMessages(prevMessages => [...prevMessages, {\r\n        content: message,\r\n        senderDeviceId: deviceId,\r\n        timestamp: new Date(),\r\n        isReceived: false\r\n      }]);\r\n      \r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <h4>Messages</h4>\r\n      \r\n      <div \r\n        ref={messageAreaRef}\r\n        className=\"border rounded p-3 mb-3\" \r\n        style={{ height: '300px', overflowY: 'auto' }}\r\n      >\r\n        {messages.length === 0 ? (\r\n          <p className=\"text-muted text-center my-5\">No messages yet</p>\r\n        ) : (\r\n          messages.map((msg, index) => (\r\n            <div \r\n              key={index} \r\n              className={`mb-2 p-2 rounded ${msg.isReceived ? 'bg-light' : 'bg-primary text-white'}`}\r\n              style={{ \r\n                maxWidth: '80%', \r\n                marginLeft: msg.isReceived ? '0' : 'auto', \r\n                marginRight: msg.isReceived ? 'auto' : '0'\r\n              }}\r\n            >\r\n              <div>{msg.content}</div>\r\n              <div className=\"text-end small mt-1\">\r\n                {formatTimestamp(msg.timestamp)}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      \r\n      <Form onSubmit={handleSendMessage}>\r\n        <InputGroup>\r\n          <Form.Control\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n          <Button type=\"submit\" variant=\"primary\">Send</Button>\r\n        </InputGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagePanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}