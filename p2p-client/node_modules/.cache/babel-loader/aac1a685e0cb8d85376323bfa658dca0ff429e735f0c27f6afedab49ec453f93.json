{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11427\\\\Desktop\\\\P2P\\\\p2p-client\\\\src\\\\components\\\\FileTransferPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, ProgressBar, Alert } from 'react-bootstrap';\nimport SignalRService from '../services/SignalRService';\n\n// 辅助函数：将ArrayBuffer转换为Base64字符串\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n}\n\n// 辅助函数：将Base64字符串转换回ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\nconst FileTransferPanel = ({\n  userId,\n  deviceId\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState('');\n\n  // For incoming transfers\n  const [incomingFiles, setIncomingFiles] = useState({});\n  const [completedFiles, setCompletedFiles] = useState([]);\n\n  // Constants for file transfer\n  const CHUNK_SIZE = 50 * 1024; // 50 KB chunks\n\n  useEffect(() => {\n    // Register event handlers for file transfer\n    SignalRService.on('onReceiveFileMetadata', handleReceiveFileMetadata);\n    SignalRService.on('onReceiveFileChunk', handleReceiveFileChunk);\n    SignalRService.on('onFileTransferComplete', handleFileTransferComplete);\n    return () => {\n      // Clean up event handlers\n      SignalRService.on('onReceiveFileMetadata', null);\n      SignalRService.on('onReceiveFileChunk', null);\n      SignalRService.on('onFileTransferComplete', null);\n    };\n  }, []);\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n  const handleSendFile = async () => {\n    if (!selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n    setIsUploading(true);\n    setError('');\n    setUploadProgress(0);\n    try {\n      // Send file metadata\n      const fileId = crypto.randomUUID();\n      const fileMetadata = {\n        fileId,\n        fileName: selectedFile.name,\n        fileSize: selectedFile.size,\n        contentType: selectedFile.type\n      };\n      await SignalRService.sendFileMetadata(userId, deviceId, fileMetadata);\n\n      // Split file into chunks and send each chunk\n      const totalChunks = Math.ceil(selectedFile.size / CHUNK_SIZE);\n      for (let i = 0; i < totalChunks; i++) {\n        const start = i * CHUNK_SIZE;\n        const end = Math.min(start + CHUNK_SIZE, selectedFile.size);\n        const chunk = selectedFile.slice(start, end);\n\n        // Convert the chunk to an array buffer\n        const arrayBuffer = await chunk.arrayBuffer();\n\n        // 将ArrayBuffer转换为Base64字符串，以避免二进制传输问题\n        const base64Data = arrayBufferToBase64(arrayBuffer);\n\n        // Send the chunk\n        await SignalRService.sendFileChunk(userId, deviceId, fileId, base64Data, i, totalChunks);\n\n        // Update progress\n        const progress = Math.round((i + 1) / totalChunks * 100);\n        setUploadProgress(progress);\n      }\n      setSelectedFile(null);\n      setUploadProgress(0);\n      document.getElementById('file-input').value = null;\n    } catch (error) {\n      console.error('Error sending file:', error);\n      setError('Error sending file: ' + error.message);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleReceiveFileMetadata = message => {\n    const {\n      fileMetadata\n    } = message;\n\n    // Initialize data structures for the incoming file\n    setIncomingFiles(prev => ({\n      ...prev,\n      [fileMetadata.fileId]: {\n        ...fileMetadata,\n        receivedChunks: {},\n        totalChunks: 0,\n        receivedSize: 0,\n        progress: 0,\n        sender: message.senderDeviceId\n      }\n    }));\n  };\n  const handleReceiveFileChunk = (senderDeviceId, fileChunk) => {\n    const {\n      fileId,\n      chunkIndex,\n      totalChunks,\n      data\n    } = fileChunk;\n\n    // 如果数据是Base64字符串，转换回二进制格式\n    const binaryData = typeof data === 'string' ? new Uint8Array(base64ToArrayBuffer(data)) : data;\n    setIncomingFiles(prev => {\n      // If we don't have this file initialized, ignore the chunk\n      if (!prev[fileId]) return prev;\n\n      // Store the chunk\n      const file = prev[fileId];\n      const newReceivedChunks = {\n        ...file.receivedChunks,\n        [chunkIndex]: data\n      };\n      const receivedChunksCount = Object.keys(newReceivedChunks).length;\n      const progress = Math.round(receivedChunksCount / totalChunks * 100);\n\n      // Calculate received size\n      let receivedSize = 0;\n      Object.values(newReceivedChunks).forEach(chunk => {\n        receivedSize += chunk.length;\n      });\n      return {\n        ...prev,\n        [fileId]: {\n          ...file,\n          receivedChunks: newReceivedChunks,\n          totalChunks,\n          receivedSize,\n          progress\n        }\n      };\n    });\n  };\n  const handleFileTransferComplete = fileId => {\n    setIncomingFiles(prev => {\n      if (!prev[fileId]) return prev;\n      const file = prev[fileId];\n\n      // Assemble the file from chunks\n      const chunks = Object.entries(file.receivedChunks).sort(([a], [b]) => parseInt(a) - parseInt(b)).map(([_, chunk]) => chunk);\n\n      // Create blob from chunks\n      const blob = new Blob(chunks, {\n        type: file.contentType || 'application/octet-stream'\n      });\n\n      // Create download URL\n      const url = URL.createObjectURL(blob);\n\n      // Add to completed files\n      setCompletedFiles(prev => [...prev, {\n        fileId,\n        fileName: file.fileName,\n        url,\n        size: file.fileSize,\n        sender: file.sender\n      }]);\n\n      // Remove from incoming files\n      const newIncomingFiles = {\n        ...prev\n      };\n      delete newIncomingFiles[fileId];\n      return newIncomingFiles;\n    });\n  };\n  const formatFileSize = bytes => {\n    if (bytes < 1024) return bytes + ' bytes';\n    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB';\n    return (bytes / (1024 * 1024)).toFixed(2) + ' MB';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"File Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setError(''),\n      dismissible: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"file-input\",\n        type: \"file\",\n        onChange: handleFileChange,\n        disabled: isUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleSendFile,\n      disabled: !selectedFile || isUploading,\n      className: \"mb-3\",\n      children: isUploading ? 'Sending...' : 'Send File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Uploading: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: uploadProgress,\n        label: `${uploadProgress}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"small mt-1\",\n        children: [formatFileSize(Math.floor(selectedFile.size * uploadProgress / 100)), \" of \", formatFileSize(selectedFile.size)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), Object.entries(incomingFiles).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Incoming Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), Object.entries(incomingFiles).map(([fileId, file]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"Receiving: \", file.fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: file.progress,\n          label: `${file.progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small mt-1\",\n          children: [formatFileSize(file.receivedSize), \" of \", formatFileSize(file.fileSize)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), completedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Completed Transfers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), completedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [file.fileName, \" (\", formatFileSize(file.size), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.url,\n          download: file.fileName,\n          className: \"btn btn-sm btn-success\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, file.fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(FileTransferPanel, \"/XRe3i/9ZStpjBMV/NkO4Z1eekI=\");\n_c = FileTransferPanel;\nexport default FileTransferPanel;\nvar _c;\n$RefreshReg$(_c, \"FileTransferPanel\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","ProgressBar","Alert","SignalRService","jsxDEV","_jsxDEV","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","base64ToArrayBuffer","base64","binaryString","atob","length","charCodeAt","FileTransferPanel","userId","deviceId","_s","selectedFile","setSelectedFile","isUploading","setIsUploading","uploadProgress","setUploadProgress","error","setError","incomingFiles","setIncomingFiles","completedFiles","setCompletedFiles","CHUNK_SIZE","on","handleReceiveFileMetadata","handleReceiveFileChunk","handleFileTransferComplete","handleFileChange","e","target","files","handleSendFile","fileId","crypto","randomUUID","fileMetadata","fileName","name","fileSize","size","contentType","type","sendFileMetadata","totalChunks","Math","ceil","start","end","min","chunk","slice","arrayBuffer","base64Data","sendFileChunk","progress","round","document","getElementById","value","console","message","prev","receivedChunks","receivedSize","sender","senderDeviceId","fileChunk","chunkIndex","data","binaryData","file","newReceivedChunks","receivedChunksCount","Object","keys","values","forEach","chunks","entries","sort","a","b","parseInt","map","_","blob","Blob","url","URL","createObjectURL","newIncomingFiles","formatFileSize","toFixed","children","_jsxFileName","lineNumber","columnNumber","variant","onClose","dismissible","Group","className","Label","Control","id","onChange","disabled","onClick","now","label","floor","href","download","_c","$RefreshReg$"],"sources":["C:/Users/11427/Desktop/P2P/p2p-client/src/components/FileTransferPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, ProgressBar, Alert } from 'react-bootstrap';\r\nimport SignalRService from '../services/SignalRService';\r\n\r\n// 辅助函数：将ArrayBuffer转换为Base64字符串\r\nfunction arrayBufferToBase64(buffer) {\r\n  let binary = '';\r\n  const bytes = new Uint8Array(buffer);\r\n  const len = bytes.byteLength;\r\n  for (let i = 0; i < len; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  return window.btoa(binary);\r\n}\r\n\r\n// 辅助函数：将Base64字符串转换回ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\nconst FileTransferPanel = ({ userId, deviceId }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [error, setError] = useState('');\r\n  \r\n  // For incoming transfers\r\n  const [incomingFiles, setIncomingFiles] = useState({});\r\n  const [completedFiles, setCompletedFiles] = useState([]);\r\n\r\n  // Constants for file transfer\r\n  const CHUNK_SIZE = 50 * 1024; // 50 KB chunks\r\n\r\n  useEffect(() => {\r\n    // Register event handlers for file transfer\r\n    SignalRService.on('onReceiveFileMetadata', handleReceiveFileMetadata);\r\n    SignalRService.on('onReceiveFileChunk', handleReceiveFileChunk);\r\n    SignalRService.on('onFileTransferComplete', handleFileTransferComplete);\r\n\r\n    return () => {\r\n      // Clean up event handlers\r\n      SignalRService.on('onReceiveFileMetadata', null);\r\n      SignalRService.on('onReceiveFileChunk', null);\r\n      SignalRService.on('onFileTransferComplete', null);\r\n    };\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setSelectedFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSendFile = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setError('');\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      // Send file metadata\r\n      const fileId = crypto.randomUUID();\r\n      const fileMetadata = {\r\n        fileId,\r\n        fileName: selectedFile.name,\r\n        fileSize: selectedFile.size,\r\n        contentType: selectedFile.type\r\n      };\r\n\r\n      await SignalRService.sendFileMetadata(userId, deviceId, fileMetadata);\r\n\r\n      // Split file into chunks and send each chunk\r\n      const totalChunks = Math.ceil(selectedFile.size / CHUNK_SIZE);\r\n      \r\n      for (let i = 0; i < totalChunks; i++) {\r\n        const start = i * CHUNK_SIZE;\r\n        const end = Math.min(start + CHUNK_SIZE, selectedFile.size);\r\n        const chunk = selectedFile.slice(start, end);\r\n        \r\n        // Convert the chunk to an array buffer\r\n        const arrayBuffer = await chunk.arrayBuffer();\r\n        \r\n        // 将ArrayBuffer转换为Base64字符串，以避免二进制传输问题\r\n        const base64Data = arrayBufferToBase64(arrayBuffer);\r\n        \r\n        // Send the chunk\r\n        await SignalRService.sendFileChunk(\r\n          userId, \r\n          deviceId, \r\n          fileId, \r\n          base64Data, \r\n          i, \r\n          totalChunks\r\n        );\r\n        \r\n        // Update progress\r\n        const progress = Math.round(((i + 1) / totalChunks) * 100);\r\n        setUploadProgress(progress);\r\n      }\r\n\r\n      setSelectedFile(null);\r\n      setUploadProgress(0);\r\n      document.getElementById('file-input').value = null;\r\n    } catch (error) {\r\n      console.error('Error sending file:', error);\r\n      setError('Error sending file: ' + error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleReceiveFileMetadata = (message) => {\r\n    const { fileMetadata } = message;\r\n    \r\n    // Initialize data structures for the incoming file\r\n    setIncomingFiles(prev => ({\r\n      ...prev,\r\n      [fileMetadata.fileId]: {\r\n        ...fileMetadata,\r\n        receivedChunks: {},\r\n        totalChunks: 0,\r\n        receivedSize: 0,\r\n        progress: 0,\r\n        sender: message.senderDeviceId\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleReceiveFileChunk = (senderDeviceId, fileChunk) => {\r\n    const { fileId, chunkIndex, totalChunks, data } = fileChunk;\r\n    \r\n    // 如果数据是Base64字符串，转换回二进制格式\r\n    const binaryData = typeof data === 'string' ? \r\n      new Uint8Array(base64ToArrayBuffer(data)) : \r\n      data;\r\n    \r\n    setIncomingFiles(prev => {\r\n      // If we don't have this file initialized, ignore the chunk\r\n      if (!prev[fileId]) return prev;\r\n\r\n      // Store the chunk\r\n      const file = prev[fileId];\r\n      const newReceivedChunks = { ...file.receivedChunks, [chunkIndex]: data };\r\n      const receivedChunksCount = Object.keys(newReceivedChunks).length;\r\n      const progress = Math.round((receivedChunksCount / totalChunks) * 100);\r\n      \r\n      // Calculate received size\r\n      let receivedSize = 0;\r\n      Object.values(newReceivedChunks).forEach(chunk => {\r\n        receivedSize += chunk.length;\r\n      });\r\n\r\n      return {\r\n        ...prev,\r\n        [fileId]: {\r\n          ...file,\r\n          receivedChunks: newReceivedChunks,\r\n          totalChunks,\r\n          receivedSize,\r\n          progress\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleFileTransferComplete = (fileId) => {\r\n    setIncomingFiles(prev => {\r\n      if (!prev[fileId]) return prev;\r\n\r\n      const file = prev[fileId];\r\n      \r\n      // Assemble the file from chunks\r\n      const chunks = Object.entries(file.receivedChunks)\r\n        .sort(([a], [b]) => parseInt(a) - parseInt(b))\r\n        .map(([_, chunk]) => chunk);\r\n      \r\n      // Create blob from chunks\r\n      const blob = new Blob(chunks, { type: file.contentType || 'application/octet-stream' });\r\n      \r\n      // Create download URL\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      // Add to completed files\r\n      setCompletedFiles(prev => [...prev, {\r\n        fileId,\r\n        fileName: file.fileName,\r\n        url,\r\n        size: file.fileSize,\r\n        sender: file.sender\r\n      }]);\r\n      \r\n      // Remove from incoming files\r\n      const newIncomingFiles = { ...prev };\r\n      delete newIncomingFiles[fileId];\r\n      return newIncomingFiles;\r\n    });\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes < 1024) return bytes + ' bytes';\r\n    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB';\r\n    return (bytes / (1024 * 1024)).toFixed(2) + ' MB';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>File Transfer</h4>\r\n      \r\n      {error && (\r\n        <Alert variant=\"danger\" onClose={() => setError('')} dismissible>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Select File</Form.Label>\r\n        <Form.Control\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          disabled={isUploading}\r\n        />\r\n      </Form.Group>\r\n      \r\n      <Button \r\n        variant=\"primary\" \r\n        onClick={handleSendFile} \r\n        disabled={!selectedFile || isUploading}\r\n        className=\"mb-3\"\r\n      >\r\n        {isUploading ? 'Sending...' : 'Send File'}\r\n      </Button>\r\n      \r\n      {isUploading && (\r\n        <div className=\"mb-3\">\r\n          <p>Uploading: {selectedFile.name}</p>\r\n          <ProgressBar now={uploadProgress} label={`${uploadProgress}%`} />\r\n          <p className=\"small mt-1\">\r\n            {formatFileSize(Math.floor(selectedFile.size * uploadProgress / 100))} of {formatFileSize(selectedFile.size)}\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Incoming file transfers */}\r\n      {Object.entries(incomingFiles).length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <h5>Incoming Files</h5>\r\n          {Object.entries(incomingFiles).map(([fileId, file]) => (\r\n            <div key={fileId} className=\"border rounded p-2 mb-2\">\r\n              <p className=\"mb-1\">Receiving: {file.fileName}</p>\r\n              <ProgressBar now={file.progress} label={`${file.progress}%`} />\r\n              <p className=\"small mt-1\">\r\n                {formatFileSize(file.receivedSize)} of {formatFileSize(file.fileSize)}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Completed file transfers */}\r\n      {completedFiles.length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <h5>Completed Transfers</h5>\r\n          {completedFiles.map((file) => (\r\n            <div key={file.fileId} className=\"border rounded p-2 mb-2\">\r\n              <p className=\"mb-1\">{file.fileName} ({formatFileSize(file.size)})</p>\r\n              <a \r\n                href={file.url} \r\n                download={file.fileName}\r\n                className=\"btn btn-sm btn-success\"\r\n              >\r\n                Download\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileTransferPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}